CREATE DATABASE Assignment_SQL2;

CREATE TABLE LOCATION (LOCATION_ID_PK INT, CITY varchar(20));
INSERT INTO LOCATION values
(122, 'New Tork'),
(123, 'Dallas'),
(124, 'Chicago'),
(167, 'Boston');
SELECT * FROM LOCATION;

CREATE TABLE DEPARTMENT (DEPARTMENT_ID_PK INT, NAME varchar(20), LOCATION_ID_PK INT);
INSERT INTO DEPARTMENT values
(10, 'Accounting', 122),
(20, 'Sales', 124),
(30, 'Research', 123),
(40, 'Operations', 167);
SELECT * FROM DEPARTMENT;

CREATE TABLE JOB (JOB_ID INT, DESIGNATION varchar(20));
INSERT INTO JOB values
(667, 'CLerk'),
(668, 'Staff'),
(669, 'Analyst'),
(670, 'Sales Person'),
(671, 'Manager'),
(672, 'President');
SELECT * FROM JOB;

CREATE TABLE EMPLOYEE (EMPLOYEE_ID INT, LAST_NAME varchar(20), FIRST_NAME varchar(20), MIDDLE_NAME varchar(1),
JOB_ID_FK INT, MANAGER_ID_FK INT, HIRE_DATE DATE, SALARY INT, COMM INT, DEPARTMENT_ID_FK INT);
INSERT INTO EMPLOYEE values
(7369, 'SMITH', 'JOHN', 'Q', 667, 7902, '1984-12-17', 800, NULL,20),
(7499, 'ALLEN', 'KEVIN', 'J', 670, 7698, '1985-02-20', 1600, 300, 30),
(7505, 'DOYLE', 'JEAN', 'K', 671, 7839, '1985-04-04', 2850, NULL, 30),
(7506, 'DENNIS', 'LYNN', 'S', 671, 7839, '1985-05-15', 2750, NULL, 30),
(7507, 'BAKER', 'LESLIE', 'D', 671, 7839, '1985-06-10', 2200, NULL, 40),
(7521, 'WARK', 'CYNTHIA', 'D', 670, 7698, '1985-02-22', 1250, 500, 30);
SELECT * FROM EMPLOYEE;

--SIMPLE QUERIES:
--1. LIST ALL THE EMPLOYEE DETAILS
SELECT * FROM EMPLOYEE;

--2. LIST ALL THE DEPARTMENT DETAILS
SELECT * FROM DEPARTMENT;

--3. LIST ALL JOB DETAILS
SELECT * FROM JOB;

--4. LIST ALL THE LOCATIONS
SELECT * FROM LOCATION;

--5. LIST OUT THE FIRSTNAME, LASTNAME, SALARY, COMMISSION FOR ALL EMPLOYEES
SELECT [FIRST_NAME], [LAST_NAME], [SALARY], [COMM] FROM EMPLOYEE;

--6. LIST OUT EMPLOYEEID,LAST NAME, DEPARTMENT ID FOR ALL EMPLOYEES AND ALIAS EMPLOYEEID AS "ID OF THE 
--EMPLOYEE", LAST NAME AS "NAME OF THE EMPLOYEE", DEPARTMENTID AS "DEP_ID"
SELECT [EMPLOYEE_ID] AS 'ID OF THE EMPLOYEE', [LAST_NAME] AS 'NAME OF THE EMPLOYEE', 
[DEPARTMENT_ID_FK] AS 'DEP_ID' FROM EMPLOYEE;

--7. LIST OUT THE EMPLOYEES ANNUAL SALARY WITH THEIR NAMES ONLY
SELECT [FIRST_NAME], SUM(12*[SALARY]) AS ANNUAL_SALARY FROM EMPLOYEE GROUP BY FIRST_NAME

--WHERE CONDITION:
--1. LIST THE DETAILS ABOUT "SMITH"
SELECT * FROM EMPLOYEE WHERE LAST_NAME = 'SMITH'

--2. LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 20.
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME FROM EMPLOYEE WHERE DEPARTMENT_ID_FK = 20

--3. LIST OUT THE EMPLOYEES WHO ARE EARNING SALARY BETWEEN 3000 AND 4500
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY FROM EMPLOYEE WHERE SALARY >=3000 AND SALARY <=4500 ORDER BY SALARY;

--4. LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 10 OR 20
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME FROM EMPLOYEE WHERE DEPARTMENT_ID_FK=10 OR DEPARTMENT_ID_FK=20

--5. FIND OUT THE EMPLOYEES WHO ARE NOT WORKING IN DEPARTMENT 10 OR 30
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME FROM EMPLOYEE WHERE DEPARTMENT_ID_FK NOT IN (10, 30);

--6. LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S'
SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEE WHERE LAST_NAME LIKE ('S%')

--7. LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S' AND ENDS WITH 'H'
SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEE WHERE LAST_NAME LIKE ('S%') and LAST_NAME LIKE('%H');

--8. LIST OUT THE EMPLOYEES WHOSE NAME LENGTH IS 4 AND START WITH 'S'
SELECT * FROM EMPLOYEE WHERE LAST_NAME LIKE 'S____'

--9. LIST OUT EMPLOYEES WHO ARE WORKING IN DEPARTMENT 10 AND DRAW THE SALARIES MORE THAN 3500
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEE WHERE DEPARTMENT_ID_FK=10 and SALARY>3500;

--10. LIST OUT THE EMPLOYEES WHO ARE NOT RECEVING COMMISSION
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEE where COMM = NULL;

--ORDER BY CLAUSE:
--1. LIST OUT THE EMPLOYEE ID, LAST NAME IN ASCENDING ORDER BASED ON THE EMPLOYEE ID
SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEE ORDER BY EMPLOYEE_ID

--2. LIST OUT THE EMPLOYEE ID, NAME IN DESCENDING ORDER BASED ON SALARY
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY FROM EMPLOYEE ORDER BY FIRST_NAME DESC

--3. LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER
SELECT * FROM EMPLOYEE ORDER BY LAST_NAME

--4. LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER AND 
--THEN ON DEPARTMENT_ID IN DESCENDING ORDER.
SELECT * FROM EMPLOYEE ORDER BY LAST_NAME, DEPARTMENT_ID_FK DESC

--GROUP BY & HAVING CLAUSE:
--1. HOW MANY EMPLOYEES WHO ARE IN DIFFERENT DEPARTMENT WISE IN THE ORGANIZATION
SELECT DEPARTMENT_ID_FK,COUNT(*) AS "NUMBER OF EMPLOYEE" FROM EMPLOYEE GROUP BY DEPARTMENT_ID_FK

--2. LIST OUT THE DEPARTMENT WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARY OF THE EMPLOYEES
SELECT DEPARTMENT_ID_FK, MAX(SALARY) AS MAX_SAL, MIN(SALARY) AS MIN_SAL, AVG(SALARY) AS AVG_SAL FROM EMPLOYEE
GROUP BY DEPARTMENT_ID_FK

--3. LIST OUT JOB WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARIES OF THE EMPLOYEES
SELECT JOB_ID_FK, MAX(SALARY) AS MAX_SAL, MIN(SALARY) AS MIN_SAL, AVG(SALARY) AS AVG_SAL FROM EMPLOYEE
GROUP BY JOB_ID_FK

--4. LIST OUT THE NUMBER OF EMPLOYEES JOINED IN EVERY MONTH IN ASCENDING ORDER
SELECT DATENAME(MM,HIRE_DATE) MONTH,COUNT(*) NO_OF_EMP FROM EMPLOYEE GROUP BY DATENAME(MM,HIRE_DATE)

--5. LIST OUT THE NUMBER OF EMPLOYEES FOR EACH MONTH AND YEAR, IN THE ASCENDING ORDER BASED ON THE YEAR, MONTH
SELECT DATEPART(YYYY,HIRE_DATE) YEAR, DATENAME(MM,HIRE_DATE) MONTH, COUNT(*) NO_OF_EMP FROM EMPLOYEE
GROUP BY DATEPART(YYYY,HIRE_DATE),DATENAME(MM,HIRE_DATE)

--6. LIST OUT THE DEPARTMENT ID HAVING ATLEAST FOUR EMPLOYEES
SELECT DEPARTMENT_ID_FK FROM EMPLOYEE GROUP BY DEPARTMENT_ID_FK HAVING COUNT(*)>=4

--7. HOW MANY EMPLOYEES JOINED IN JANUARY MONTH
SELECT HIRE_DATE FROM EMPLOYEE WHERE MONTH(HIRE_DATE)=1

--8. HOW MANY EMPLOYEES JOINED IN JANUARY OR SEPTEMBER MONTH
SELECT HIRE_DATE FROM EMPLOYEE WHERE MONTH(HIRE_DATE)=1 OR MONTH(HIRE_DATE)=9

--9. HOW MANY EMPLOYEES WERE JOINED IN 1985?
SELECT DATEPART(YY,HIRE_DATE) YEAR,COUNT(*) "NO_OF_EMP" FROM EMPLOYEE WHERE DATEPART(YY,HIRE_DATE)=1985
GROUP BY DATEPART(YY,HIRE_DATE)

--10. HOW MANY EMPLOYEES WERE JOINED EACH MONTH IN 1985
SELECT  DATEPART(YY,HIRE_DATE) YEAR, DATENAME(MM,HIRE_DATE) MONTH, COUNT(*) "NO_OF_EMP" FROM EMPLOYEE
WHERE DATEPART(YY,HIRE_DATE)=1985 GROUP BY DATEPART(YY,HIRE_DATE),DATENAME(MM,HIRE_DATE)

--11. HOW MANY EMPLOYEES WERE JOINED IN MARCH 1985
SELECT DATEPART(YY,HIRE_DATE) YEAR, DATENAME(MM,HIRE_DATE) MONTH, COUNT(*) "NO_OF_EMP" FROM EMPLOYEE
WHERE DATEPART(YY,HIRE_DATE)=1985 AND DATENAME(MM,HIRE_DATE)='MARCH' GROUP BY DATEPART(YY,HIRE_DATE),
DATENAME(MM,HIRE_DATE)

--12. WHICH IS THE DEPARTMENT ID, HAVING GREATER THAN OR EQUAL TO 3 EMPLOYEES JOINED IN APRIL 1985
SELECT DEPARTMENT_ID_FK, COUNT(*) "NO_OF_EMP" FROM EMPLOYEE WHERE DATEPART(YY,HIRE_DATE)=1985 AND 
DATENAME(MM,HIRE_DATE)='APRIL' GROUP BY DEPARTMENT_ID_FK HAVING COUNT(*)>=3

--JOINS:
--1. LIST OUT EMPLOYEES WITH THEIR DEPARTMENT NAMES
SELECT EMPLOYEE_ID,FIRST_NAME, LAST_NAME, DEPARTMENT_ID_FK, NAME
FROM EMPLOYEE
INNER JOIN DEPARTMENT
ON EMPLOYEE.DEPARTMENT_ID_FK=DEPARTMENT.DEPARTMENT_ID_PK

--2. DISPLAY EMPLOYEES WITH THEIR DESIGNATIONS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID_FK, DESIGNATION
FROM EMPLOYEE
INNER JOIN JOB
ON EMPLOYEE.JOB_ID_FK=JOB.JOB_ID

--3. DISPLAY THE EMPLOYEES WITH THEIR DEPARTMENT NAMES AND REGIONAL GROUPS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_ID_FK, NAME AS DEPARTMENT_NAMES, CITY AS REGIONAL_GROUPS
FROM EMPLOYEE,DEPARTMENT,LOCATION
WHERE EMPLOYEE.DEPARTMENT_ID_FK=DEPARTMENT.DEPARTMENT_ID_PK
AND
DEPARTMENT.LOCATION_ID_PK=LOCATION.LOCATION_ID_PK

--4. HOW MANY EMPLOYEES WHO ARE WORKING IN DIFFERENT DEPARTMENTS AND DISPLAY WITH DEPARTMENT NAMES
SELECT NAME AS "DEPARTMENT_NAME",COUNT(*) AS "NO_OF_EMP"
FROM DEPARTMENT
INNER JOIN EMPLOYEE
ON EMPLOYEE.DEPARTMENT_ID_FK=DEPARTMENT.DEPARTMENT_ID_PK
GROUP BY NAME

--5. HOW MANY EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT
SELECT NAME, COUNT(*) AS "NO_OF_EMP"
FROM DEPARTMENT
INNER JOIN EMPLOYEE
ON EMPLOYEE.DEPARTMENT_ID_FK=DEPARTMENT.DEPARTMENT_ID_PK
GROUP BY NAME
HAVING NAME='SALES'

--6. WHICH IS THE DEPARTMENT HAVING GREATER THAN OR EQUAL TO 5 EMPLOYEES AND DISPLAY THE DEPARTMENT NAMES 
--IN ASCENDING ORDER
SELECT NAME AS "DEPARTMENT_NAME",COUNT(*) AS "NO_OF_EMP"
FROM DEPARTMENT
INNER JOIN EMPLOYEE
ON EMPLOYEE.DEPARTMENT_ID_FK=DEPARTMENT.DEPARTMENT_ID_PK
GROUP BY NAME
HAVING COUNT(*)>=5

--7. HOW MANY JOBS IN THE ORGANIZATION WITH DESIGNATIONS
SELECT DESIGNATION, COUNT(*) AS "NO OF JOBS"
FROM JOB
GROUP BY DESIGNATION

--8. HOW MANY EMPLOYEES ARE WORKING IN "NEW YORK"
SELECT CITY,COUNT(*) "NO_OF_EMP"
FROM EMPLOYEE
INNER JOIN DEPARTMENT ON EMPLOYEE.DEPARTMENT_ID_FK=DEPARTMENT.DEPARTMENT_ID_PK
INNER JOIN LOCATION ON DEPARTMENT.LOCATION_ID_PK=LOCATION.LOCATION_ID_PK
GROUP BY CITY
HAVING CITY='NEW YORK'

--9. DISPLAY THE EMPLOYEE DETAILS WITH SALARY GRADES
--NO SALARY DETAILED TABLE GIVEN IN THE EXAMPLE

--10. LIST OUT THE NO. OF EMPLOYEES ON GRADE WISE.
--NO SALARY DETAILED TABLE GIVEN IN THE EXAMPLE

--11. DISPLAY THE EMPLOYEE SALARY GRADES AND NO. OF EMPLOYEES BETWEEN 2000 TO 5000 RANGE OF SALARY
--NO SALARY DETAILED TABLE GIVEN IN THE EXAMPLE

--12. DISPLAY THE EMPLOYEE DETAILS WITH THEIR MANAGER NAMES
--NO MANAGER DETAILED TABLE GIVEN IN THE EXAMPLE

--13. DISPLAY THE EMPLOYEE DETAILS WHO EARN MORE THAN THEIR MANAGERS SALARIES
--NO MANAGER DETAILED TABLE GIVEN IN THE EXAMPLE

--14. SHOW THE NO. OF EMPLOYEES WORKING UNDER EVERY MANAGER
--NO MANAGER DETAILED TABLE GIVEN IN THE EXAMPLE

--15. DISPLAY EMPLOYEE DETAILS WITH THEIR MANAGER NAMES
--NO MANAGER DETAILED TABLE GIVEN IN THE EXAMPLE

--16. DISPLAY ALL EMPLOYEES IN SALES OR OPERATION DEPARTMENTS
--NOT UNDERSTAND

--SET OPERATORS:
--1. LIST OUT THE DISTINCT JOBS IN SALES AND ACCOUNTING DEPARTMENTS
--NOT UNDERSTAND

--2. LIST OUT ALL THE JOBS IN SALES AND ACCOUNTING DEPARTMENTS
--NOT UNDERSTAND

--3. LIST OUT THE COMMON JOBS IN RESEARCH AND ACCOUNTING DEPARTMENTS IN ASCENDING ORDER.
--NOT UNDERSTAND

--SUB QUERIES:
--1. DISPLAY THE EMPLOYEES LIST WHO GOT THE MAXIMUM SALARY
--NO SALARY DETAILED TABLE GIVEN IN THE EXAMPLE

--2. DISPLAY THE EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT
SELECT * FROM EMPLOYEE WHERE DEPARTMENT_ID_FK IN (SELECT DEPARTMENT_ID_PK FROM DEPARTMENT WHERE NAME='SALES')

--3. DISPLAY THE EMPLOYEES WHO ARE WORKING AS 'CLERCK'.
SELECT * FROM EMPLOYEE WHERE JOB_ID_FK IN (SELECT JOB_ID FROM JOB WHERE DESIGNATION='CLERK')

--4. DISPLAY THE LIST OF EMPLOYEES WHO ARE LIVING IN "NEW YORK"
SELECT * FROM EMPLOYEE WHERE DEPARTMENT_ID_FK IN(SELECT DEPARTMENT_ID_PK FROM DEPARTMENT
WHERE LOCATION_ID_PK IN (SELECT LOCATION_ID_PK FROM LOCATION
WHERE CITY='NEW YORK'))

--5. FIND OUT NO. OF EMPLOYEES WORKING IN "SALES" DEPARTMENT
SELECT * FROM EMPLOYEE WHERE DEPARTMENT_ID_FK IN (SELECT DEPARTMENT_ID_PK FROM DEPARTMENT WHERE NAME='SALES')

--6. UPDATE THE EMPLOYEES SALARIES, WHO ARE WORKING AS CLERK ON THE BASIS OF 10%
UPDATE EMPLOYEE SET SALARY=(SALARY+SALARY*10/100) WHERE JOB_ID_FK IN(SELECT JOB_ID FROM JOB
WHERE DESIGNATION='CLERK')

--7. DELETE THE EMPLOYEES WHO ARE WORKING IN ACCOUNTING DEPARTMENT
DELETE FROM EMPLOYEE WHERE DEPARTMENT_ID_FK IN(SELECT DEPARTMENT_ID_PK FROM DEPARTMENT WHERE NAME='ACCOUNTING')

--8. DISPLAY THE SECOND HIGHEST SALARY DRAWING EMPLOYEE DETAILS
SELECT * FROM EMPLOYEE WHERE SALARY IN(SELECT MAX(SALARY) FROM EMPLOYEE WHERE SALARY <(SELECT MAX(SALARY) FROM EMPLOYEE))

--9. DISPLAY THE N'TH HIGHEST SALARY DRAWING EMPLOYEE DETAILS
--NOT UNDERSTAND

--10. LIST OUT THE EMPLOYEES WHO EARN MORE THAN EVERY EMPLOYEE IN DEPARTMENT 30
--NOT UNDERSTAND

--11. LIST OUT THE EMPLOYEES WHO EARN MORE THAN THE LOWEST SALARY IN DEPARTMENT 30
SELECT * FROM EMPLOYEE WHERE SALARY>ANY(SELECT MIN(SALARY) FROM EMPLOYEE
WHERE DEPARTMENT_ID_FK=30)

--12. FIND OUT WHOSE DEPARTMENT HAS NOT EMPLOYEES
--NOT UNDERSTAND

--13. FIND OUT WHICH DEPARTMENT DOES NOT HAVE ANY EMPLOYEES
SELECT DEPARTMENT_ID_PK,NAME FROM DEPARTMENT WHERE DEPARTMENT_ID_PK NOT IN(SELECT DEPARTMENT_ID_FK FROM EMPLOYEE)

--14. FIND OUT THE EMPLOYEES WHO EARN GREATER THAN THE AVERAGE SALARY FOR THEIR DEPARTMENT
--NOT UNDERSTAND

--END OF THIS ASSIGNMENT--